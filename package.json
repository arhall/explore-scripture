{
  "name": "explore-scripture",
  "version": "1.0.0",
  "description": "Interactive Scripture study platform with 5,500+ entities, chapter summaries, and embedded Scripture widgets",
  "private": true,
  "author": "Explore Scripture Team",
  "license": "MIT",
  "keywords": [
    "scripture",
    "bible",
    "study",
    "entities",
    "pwa",
    "eleventy"
  ],
  "homepage": "https://explore-scripture.pages.dev",
  "repository": {
    "type": "git",
    "url": "git+https://github.com/yourusername/explore-scripture.git"
  },
  "scripts": {
    "// Development": "",
    "dev": "node scripts/build-safeguards.js dev",
    "dev:unsafe": "eleventy --serve --watch",
    "dev:debug": "DEBUG=Eleventy* npm run dev",
    "dev:port": "eleventy --serve --watch --port=3000",
    "// Building": "",
    "build": "npm run entities:process && npm run search:generate && eleventy",
    "build:production": "npm run entities:process && npm run search:generate && NODE_ENV=production eleventy && npm run optimize",
    "build:workers": "npm run build:production && npm run workers:prepare",
    "build:workers-temp": "npm run entities:dev && npm run search:generate && NODE_ENV=production eleventy --config=.eleventy.js && npm run optimize:html && npm run workers:prepare",
    "build:workers-safe": "node scripts/workers-safe-build.js",
    "build:workers-dev": "npm run build:dev && npm run workers:prepare",
    "build:dev": "npm run entities:dev && npm run search:generate && node scripts/optimized-eleventy-build.js development",
    "entities:dev": "node scripts/optimized-entity-processor.js development",
    "build:analyze": "npm run build && node scripts/build-logger.js",
    "build:fast": "eleventy",
    "// Entity Management": "",
    "entities:process": "node scripts/entity-utils/entity-processor.js",
    "entities:extract": "node scripts/entity-utils/extract-book-entities.js",
    "entities:validate": "node scripts/entity-utils/validate-entity-schema.js",
    "entities:test": "node scripts/entity-utils/test-key-figures-loading.js",
    "// Search & Data": "",
    "search:generate": "node generate-search-data.js",
    "data:validate": "npm run entities:validate && npm run entities:test",
    "// Optimization": "",
    "optimize": "npm run optimize:css && npm run optimize:html",
    "optimize:css": "postcss src/styles.css --use cssnano --output _site/styles.css",
    "optimize:html": "node scripts/compress-html.js",
    "// Testing": "",
    "test": "bash run_tests.sh",
    "test:entities": "source test-env/bin/activate && python -m pytest tests/test_entities_system.py -v",
    "test:selenium": "source test-env/bin/activate && python -m pytest tests/ -v",
    "test:smoke": "source test-env/bin/activate && python -m pytest tests/ -v -m smoke",
    "test:safari": "source test-env/bin/activate && python -m pytest tests/test_ios_safari.py -v -m safari",
    "test:mobile": "source test-env/bin/activate && python -m pytest tests/test_ios_safari.py -v -m mobile",
    "test:ios": "source test-env/bin/activate && python -m pytest tests/test_ios_safari.py -v -m ios",
    "test:setup": "python3 -m venv test-env && source test-env/bin/activate && pip install -r tests/requirements.txt",
    "test:env": "source test-env/bin/activate && python -m pytest tests/test_env_config.py -v",
    "// Quality & Linting": "",
    "lint": "npm run lint:js && npm run lint:css && npm run format:check",
    "lint:js": "eslint src/assets/*.js scripts/**/*.js",
    "lint:css": "stylelint src/styles.css",
    "lint:fix": "npm run lint:js -- --fix && npm run lint:css -- --fix && npm run format",
    "format": "prettier --write .",
    "format:check": "prettier --check .",
    "// Performance & Analysis": "",
    "performance:report": "node scripts/performance-report.js",
    "logs:analyze": "node scripts/build-logger.js",
    "analyze": "npm run build:analyze && npm run logs:analyze",
    "// Docker": "",
    "docker:build": "./docker-build.sh",
    "docker:run": "docker run -p 8080:80 bible-explorer:latest",
    "docker:up": "docker-compose up",
    "docker:dev": "docker-compose --profile dev up bible-site-dev",
    "docker:down": "docker-compose down",
    "// Cloudflare Workers": "",
    "workers:dev": "node scripts/safe-wrangler-dev.js",
    "workers:dev:safe": "node scripts/build-safeguards.js workers",
    "workers:dev:simple": "npm run build:workers-temp && echo 'âœ… Build complete. Run: npx wrangler dev --local' && npx wrangler dev --local",
    "workers:dev:unsafe": "wrangler dev",
    "workers:deploy": "wrangler deploy",
    "workers:prepare": "node scripts/prepare-workers.js",
    "workers:kv:create": "wrangler kv:namespace create CACHE && wrangler kv:namespace create ENTITIES",
    "workers:kv:upload": "node scripts/upload-to-kv.js",
    "// Utility": "",
    "clean": "rm -rf _site build-logs tmp .cache .build-lock",
    "safeguards:check": "node scripts/build-safeguards.js check",
    "safeguards:cleanup": "node scripts/build-safeguards.js cleanup",
    "clean:all": "npm run clean && rm -rf node_modules test-env .pytest_cache",
    "setup": "npm install && npm run test:setup",
    "validate": "npm run lint && npm run data:validate && npm run build && npm run test:smoke",
    "precommit": "npm run lint:fix && npm run data:validate"
  },
  "devDependencies": {
    "@11ty/eleventy": "^3.0.0",
    "@11ty/eleventy-plugin-bundle": "^3.0.7",
    "@eslint/js": "^9.34.0",
    "@jest/test-sequencer": "^30.0.5",
    "@types/jest": "^30.0.0",
    "chrome-launcher": "^1.2.0",
    "cssnano": "^7.1.1",
    "eslint": "^9.34.0",
    "express": "^5.1.0",
    "html-minifier-terser": "^7.2.0",
    "htmlnano": "^2.1.2",
    "jest": "^30.0.5",
    "jest-environment-jsdom": "^30.0.5",
    "jsdom": "^26.1.0",
    "lighthouse": "^12.8.1",
    "postcss": "^8.5.6",
    "postcss-cli": "^11.0.1",
    "prettier": "^3.6.2",
    "puppeteer": "^24.17.0",
    "stylelint": "^16.23.1",
    "stylelint-config-standard": "^39.0.0",
    "svgo": "^3.3.2",
    "terser": "^5.43.1",
    "wrangler": "^4.40.3"
  },
  "dependencies": {
    "@cloudflare/kv-asset-handler": "^0.4.0"
  }
}
